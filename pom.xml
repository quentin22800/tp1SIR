<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ER</groupId>
	<artifactId>tp1</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>tp1</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<!-- or whatever version you use -->
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.5</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<logViolationsToConsole>true</logViolationsToConsole>
					<checkstyleRules>
						<module name="Checker">
							<property name="charset" value="UTF-8" />

							<property name="severity" value="warning" />

							<property name="fileExtensions" value="java, properties, xml" />
							<!-- Checks for whitespace -->
							<!-- See http://checkstyle.sf.net/config_whitespace.html -->
							<module name="FileTabCharacter">
								<property name="eachLine" value="true" />
							</module>

							<module name="TreeWalker">
								<module name="OuterTypeFilename" />
								<module name="IllegalTokenText">
									<property name="tokens" value="STRING_LITERAL, CHAR_LITERAL" />
									<property name="format"
										value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)" />
									<property name="message"
										value="Consider using special escape sequence instead of octal value or Unicode escaped value." />
								</module>
								<module name="AvoidEscapedUnicodeCharacters">
									<property name="allowEscapesForControlCharacters"
										value="true" />
									<property name="allowByTailComment" value="true" />
									<property name="allowNonPrintableEscapes" value="true" />
								</module>
								<module name="LineLength">
									<property name="max" value="100" />
									<property name="ignorePattern"
										value="^package.*|^import.*|a href|href|http://|https://|ftp://" />
								</module>
								<module name="AvoidStarImport" />
								<module name="OneTopLevelClass" />
								<module name="NoLineWrap" />
								<module name="EmptyBlock">
									<property name="option" value="TEXT" />
									<property name="tokens"
										value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH" />
								</module>
								<module name="NeedBraces" />
								<module name="LeftCurly" />
								<module name="RightCurly">
									<property name="id" value="RightCurlySame" />
									<property name="tokens"
										value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO" />
								</module>
								<module name="RightCurly">
									<property name="id" value="RightCurlyAlone" />
									<property name="option" value="alone" />
									<property name="tokens"
										value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT" />
								</module>
								<module name="WhitespaceAround">
									<property name="allowEmptyConstructors" value="true" />
									<property name="allowEmptyMethods" value="true" />
									<property name="allowEmptyTypes" value="true" />
									<property name="allowEmptyLoops" value="true" />
									<message key="ws.notFollowed"
										value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)" />
									<message key="ws.notPreceded"
										value="WhitespaceAround: ''{0}'' is not preceded with whitespace." />
								</module>
								<module name="OneStatementPerLine" />
								<module name="MultipleVariableDeclarations" />
								<module name="ArrayTypeStyle" />
								<module name="MissingSwitchDefault" />
								<module name="FallThrough" />
								<module name="UpperEll" />
								<module name="ModifierOrder" />
								<module name="EmptyLineSeparator">
									<property name="allowNoEmptyLineBetweenFields" value="true" />
								</module>
								<module name="SeparatorWrap">
									<property name="id" value="SeparatorWrapDot" />
									<property name="tokens" value="DOT" />
									<property name="option" value="nl" />
								</module>
								<module name="SeparatorWrap">
									<property name="id" value="SeparatorWrapComma" />
									<property name="tokens" value="COMMA" />
									<property name="option" value="EOL" />
								</module>
								<module name="SeparatorWrap">
									<!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 -->
									<property name="id" value="SeparatorWrapEllipsis" />
									<property name="tokens" value="ELLIPSIS" />
									<property name="option" value="EOL" />
								</module>
								<module name="SeparatorWrap">
									<!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 -->
									<property name="id" value="SeparatorWrapArrayDeclarator" />
									<property name="tokens" value="ARRAY_DECLARATOR" />
									<property name="option" value="EOL" />
								</module>
								<module name="SeparatorWrap">
									<property name="id" value="SeparatorWrapMethodRef" />
									<property name="tokens" value="METHOD_REF" />
									<property name="option" value="nl" />
								</module>
								<module name="PackageName">
									<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
									<message key="name.invalidPattern"
										value="Package name ''{0}'' must match pattern ''{1}''." />
								</module>
								<module name="TypeName">
									<message key="name.invalidPattern"
										value="Type name ''{0}'' must match pattern ''{1}''." />
								</module>
								<module name="MemberName">
									<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$" />
									<message key="name.invalidPattern"
										value="Member name ''{0}'' must match pattern ''{1}''." />
								</module>
								<module name="ParameterName">
									<property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
									<message key="name.invalidPattern"
										value="Parameter name ''{0}'' must match pattern ''{1}''." />
								</module>
								<module name="CatchParameterName">
									<property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
									<message key="name.invalidPattern"
										value="Catch parameter name ''{0}'' must match pattern ''{1}''." />
								</module>
								<module name="LocalVariableName">
									<property name="tokens" value="VARIABLE_DEF" />
									<property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
									<message key="name.invalidPattern"
										value="Local variable name ''{0}'' must match pattern ''{1}''." />
								</module>
								<module name="ClassTypeParameterName">
									<property name="format"
										value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
									<message key="name.invalidPattern"
										value="Class type name ''{0}'' must match pattern ''{1}''." />
								</module>
								<module name="MethodTypeParameterName">
									<property name="format"
										value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
									<message key="name.invalidPattern"
										value="Method type name ''{0}'' must match pattern ''{1}''." />
								</module>
								<module name="InterfaceTypeParameterName">
									<property name="format"
										value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
									<message key="name.invalidPattern"
										value="Interface type name ''{0}'' must match pattern ''{1}''." />
								</module>
								<module name="NoFinalizer" />
								<module name="GenericWhitespace">
									<message key="ws.followed"
										value="GenericWhitespace ''{0}'' is followed by whitespace." />
									<message key="ws.preceded"
										value="GenericWhitespace ''{0}'' is preceded with whitespace." />
									<message key="ws.illegalFollow"
										value="GenericWhitespace ''{0}'' should followed by whitespace." />
									<message key="ws.notPreceded"
										value="GenericWhitespace ''{0}'' is not preceded with whitespace." />
								</module>
								<module name="Indentation">
									<property name="basicOffset" value="2" />
									<property name="braceAdjustment" value="0" />
									<property name="caseIndent" value="2" />
									<property name="throwsIndent" value="4" />
									<property name="lineWrappingIndentation" value="4" />
									<property name="arrayInitIndent" value="2" />
								</module>
								<module name="AbbreviationAsWordInName">
									<property name="ignoreFinal" value="false" />
									<property name="allowedAbbreviationLength" value="1" />
								</module>
								<module name="OverloadMethodsDeclarationOrder" />
								<module name="VariableDeclarationUsageDistance" />
								<module name="CustomImportOrder">
									<property name="sortImportsInGroupAlphabetically"
										value="true" />
									<property name="separateLineBetweenGroups" value="true" />
									<property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE" />
								</module>
								<module name="MethodParamPad" />
								<module name="NoWhitespaceBefore">
									<property name="tokens"
										value="COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF" />
									<property name="allowLineBreaks" value="true" />
								</module>
								<module name="ParenPad" />
								<module name="OperatorWrap">
									<property name="option" value="NL" />
									<property name="tokens"
										value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF " />
								</module>
								<module name="AnnotationLocation">
									<property name="id" value="AnnotationLocationMostCases" />
									<property name="tokens"
										value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF" />
								</module>
								<module name="AnnotationLocation">
									<property name="id" value="AnnotationLocationVariables" />
									<property name="tokens" value="VARIABLE_DEF" />
									<property name="allowSamelineMultipleAnnotations"
										value="true" />
								</module>
								<module name="NonEmptyAtclauseDescription" />
								<module name="JavadocTagContinuationIndentation" />
								<module name="SummaryJavadoc">
									<property name="forbiddenSummaryFragments"
										value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )" />
								</module>
								<module name="JavadocParagraph" />
								<module name="AtclauseOrder">
									<property name="tagOrder" value="@param, @return, @throws, @deprecated" />
									<property name="target"
										value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF" />
								</module>
								<module name="JavadocMethod">
									<property name="scope" value="public" />
									<property name="allowMissingParamTags" value="true" />
									<property name="allowMissingThrowsTags" value="true" />
									<property name="allowMissingReturnTag" value="true" />
									<property name="minLineCount" value="2" />
									<property name="allowedAnnotations" value="Override, Test" />
									<property name="allowThrowsTagsForSubclasses" value="true" />
								</module>
								<module name="MethodName">
									<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$" />
									<message key="name.invalidPattern"
										value="Method name ''{0}'' must match pattern ''{1}''." />
								</module>
								<module name="SingleLineJavadoc">
									<property name="ignoreInlineTags" value="false" />
								</module>
								<module name="EmptyCatchBlock">
									<property name="exceptionVariableName" value="expected" />
								</module>
								<module name="CommentsIndentation" />
							</module>
						</module>
					</checkstyleRules>
					<configLocation>google_checks.xml</configLocation>
				</configuration>
			</plugin>

		</plugins>
	</reporting>


	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>swingx</artifactId>
			<version>1.6.1</version>
		</dependency>

	</dependencies>
</project>
